name: Test

on:
  push:
    branches: [ "master" ]
    tags: ["v*"]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test (Python ${{ matrix.python-version }}, Paramiko ${{ matrix.paramiko-version }})
    strategy:
      fail-fast: false
      matrix:
        paramiko-version:
           - '2.0'
           - '3.0'
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
    steps:
    - name: Checkout SSH docker container
      run: docker pull sjourdan/alpine-sshd

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Update pip
      run: python -m pip install -U pip wheel setuptools

    - name: Install local code
      run: python -m pip install -e .

    - name: Install Test dependencies
      run: python -m pip install -e ".[test]"

    - name: Test with coverage
      run: pytest -v --doctest-modules --junitxml=junit/test-results.xml --cov=miarec_sshfs --cov-report=xml --cov-report=html tests/

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    environment: GitHub Releases
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: Release
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Release a Changelog
      uses: rasmus-saks/release-a-changelog-action@v1.0.1
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'

  package:
    environment: PyPI
    runs-on: ubuntu-latest
    name: Deploy (PyPI)
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v1
      with:
        python-version: 3.11
    - name: Install build package
      run: python -m pip install -U build
    - name: Build a wheel and source tarball
      run: python -m build --sdist --wheel --outdir dist
    - name: Publish distributions to PyPI
      uses: pypa/gh-action-pypi-publish@v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
